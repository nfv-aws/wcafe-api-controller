openapi: "3.0.0"
info:
  version: 1.0.0
  title: wcafe
  description: wcafe store
servers:
  - url: http://{host}:{port}/api/v1
    description: 開発用
    variables:
      host:
        default: localhost
      port:
        default: '8080'
paths:
# pathsオブジェクト
  /stores:
    get:
      summary: 店舗リスト
      tags:
        - stores
      parameters: []
      responses: #レスポンスを定義
        '200':
          description: 店舗の一覧表示
          content:
            application/json: # レスポンスの形式を指定
              schema:
                type: object
                properties:
                  stores:
                    type: array
                    items:
                      $ref: "#/components/schemas/stores"  #参照するモデル
    post:
      summary: 店舗の新規登録
      tags:
        - stores
      parameters: []
      requestBody: #リクエストボディ
          description: 店舗の新規登録
          content:
            application/json:
              schema: #POSTするオブジェクト
                type: object
                properties:
                  store:
                    $ref: "#/components/schemas/stores" 
      responses:
        '201':
          description: 新規登録に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: "#/components/schemas/stores"
  /stores/{store_id}:
    get:
      summary: 選択された店舗情報を取得
      tags:
        - stores
      parameters:
        - name: store_id
          in: path
          description: 取得対象の店舗 ID
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: 取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: '#/components/schemas/stores'
  /pets:
    get:
      summary: 商品リスト
      tags:
        - pets
      parameters: []
      responses:
        '200':
          description: 商品一覧の表示
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                     $ref: "#/components/schemas/pets"
    post: 
      summary: 新規商品登録
      tags: 
        - pets
      description: 新規商品登録
      parameters: []
      requestBody: # リクエストボディ
        description: 商品登録
        content:
          application/json:
            schema: # POSTするオブジェクト
              $ref: '#/components/schemas/pets'
            example:
              name: Shiba lnu
              store_id: 70483fbc-73be-11ea-bc55-0242ac130003
      responses:
        '201':
          description: CREATED

  /pets/{pet_id}:
    get:
      summary: ID指定による商品取得
      description: 該当する商品を返す
      parameters: # リクエストパラメータ
        - name: pet_id
          in: path # パラメータをパス内に含める
          description: 商品ID
          required: true
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: 商品情報
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/pets'
                example:
                  id: 65f79f22-73b8-11ea-bc55-0242ac130003
                  name: toy poodle
                  store_id: 75a68334-73b8-11ea-bc55-0242ac130003
  
components:
  schemas:
    stores:
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: 店の識別子
          type: string
          format: UUID
          readOnly: true
        name:
          description: 店名
          type: string
        tag:
          type: string
          
    pets:
      type: object
      properties:
        id:
          description: 商品の識別子
          type: string
          format: UUID
          readOnly: true
        name:
          description: 商品名
          type: string
        store_id:
          description: 店の識別子
          type: string
          format: UUID
      required: 
        - id
        - name
        - store_id



// Code generated by MockGen. DO NOT EDIT.
// Source: service/clerks_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/nfv-aws/wcafe-api-controller/entity"
	reflect "reflect"
)

// MockClerkService is a mock of ClerkService interface.
type MockClerkService struct {
	ctrl     *gomock.Controller
	recorder *MockClerkServiceMockRecorder
}

// MockClerkServiceMockRecorder is the mock recorder for MockClerkService.
type MockClerkServiceMockRecorder struct {
	mock *MockClerkService
}

// NewMockClerkService creates a new mock instance.
func NewMockClerkService(ctrl *gomock.Controller) *MockClerkService {
	mock := &MockClerkService{ctrl: ctrl}
	mock.recorder = &MockClerkServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClerkService) EXPECT() *MockClerkServiceMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockClerkService) List() ([]entity.Clerk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]entity.Clerk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockClerkServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockClerkService)(nil).List))
}

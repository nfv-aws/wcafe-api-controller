// Code generated by MockGen. DO NOT EDIT.
// Source: service/supplies_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	entity "github.com/nfv-aws/wcafe-api-controller/entity"
	reflect "reflect"
)

// MockSupplyService is a mock of SupplyService interface.
type MockSupplyService struct {
	ctrl     *gomock.Controller
	recorder *MockSupplyServiceMockRecorder
}

// MockSupplyServiceMockRecorder is the mock recorder for MockSupplyService.
type MockSupplyServiceMockRecorder struct {
	mock *MockSupplyService
}

// NewMockSupplyService creates a new mock instance.
func NewMockSupplyService(ctrl *gomock.Controller) *MockSupplyService {
	mock := &MockSupplyService{ctrl: ctrl}
	mock.recorder = &MockSupplyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSupplyService) EXPECT() *MockSupplyServiceMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockSupplyService) List() ([]entity.Supply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]entity.Supply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSupplyServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSupplyService)(nil).List))
}

// Create mocks base method.
func (m *MockSupplyService) Create(c *gin.Context) (entity.Supply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", c)
	ret0, _ := ret[0].(entity.Supply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSupplyServiceMockRecorder) Create(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSupplyService)(nil).Create), c)
}
